name: Build and Upload Electron App

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build with electron-vite build
        run: npm run dist

      - name: Update latest tag to current commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          git tag -f latest
          git push origin -f latest

      - name: Remove existing asset if exists
        uses: actions/github-script@v7
        with:
          script: |
            const tag = "latest";
            const release = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });
            const assets = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id
            });
            for (const asset of assets.data) {
              if (asset.name === "th123lagchecker.exe") {
                await github.rest.repos.deleteReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  asset_id: asset.id
                });
                console.log(`Deleted existing asset ${asset.name}`);
              }
            }
            const uploadUrl = release.data.upload_url.replace(/\{\?name,label\}$/, "");
            core.setOutput("upload_url", release.data.upload_url);
        id: get_release_and_clean
        
      - name: Upload exe asset to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_and_clean.outputs.upload_url }}
          asset_path: dist/th123lagchecker.exe
          asset_name: th123lagchecker.exe
          asset_content_type: application/octet-stream
